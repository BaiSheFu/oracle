
1.RECORD类型 -- 让同类的元素保存在同一张记录表中
  
    --声明 
     DECLARE 
       TYPE test_type IS RECORD (
            test1 VARCHAR2
            test2 NUMBER
            ....
       )
       v_type test_type;
      BEGIN
       v_type.test1 = 'ttt'; --赋值
       v_type.test2 = 1;
      END;
      /
      
2.序列类型
  
  --声明
  DECLARE 
    TYPE test_index IS TABLE OF VARCHAR2(50) INDEX BY PLS_INTEGER;
    v_index test_index;
  BEGIN 
    v_index(0) = 'william';  --赋值 索引是不连续的
    v_index(10) = 'wwww';
    IF v_index EXISTS(0) THEN --判断索引是否存在
      (DO SOMETHING)
    END IF;
  END;
  /
  
3.嵌套表

  --新建嵌套表
  
  CREATE OR REPLACE TYPE table_test AS TABLE OF VARCHAR2(50);
  /
  
  DROP TABLE department;  
  
  CREATE TABLE department (  --创建一张表 
    did NUMBER,
    deptName VARCHAR2(50),
    projects table_test
  )NESTED TABLE projects STORE AS project_nested_table; -- 定义嵌套表的存储名称

 
  INSERT INTO department(did,deptName,projects) VALUES (10,'william',table_test('1号','2号')); -- 插入一条数据
  
  SELECT * FROM TABLE (
    SELECT projects FROM department WHERE did = 10 
  ) ;  --嵌套表中的多个数据以数据表的形式返回
   
   UPDATE TABLE (SELECT projects FROM department WHERE did = 10 )pro SET VALUE(pro) = '30' WHERE COLUMN_VALUE = '2号'; --嵌套表的更新
   
   
4.可变数组

 --可变数组是一个固定了长度的嵌套表 存储的是对象

 --新建可变数组
 
 CREATE OR REPLACE TYPE project_array AS VARRAY(3) OF VARCHAR2(50);
 /
 
 --创建一个嵌套表
 
 CREATE OR REPLCA TYPE project_type AS OBJECT (
    projectid NUMBER,
    projectname VARCHAR2(50),
    projectfunds NUMBER,
    pubdate DATE
 )
 
 CREATE OR REPLACE TYPE project_array AS VARRAY(3) OF project_type 
 /
 
 CREATE TABLE department (
    did NUMBER,
    projects project_array
 )
 
 DECLARE 
    TYPE project_varray IS VARRAY(2) OF project_type NOT NULL;
    v_value department%ROWTYPE;
    v_project project_varray := project_varray(
      project_type(1, 'William', 200, TO_DATE('2013-02-02',yyyy-mm-dd)),
      project_type(2, 'Tim', 300, TO_DATE('2013-02-03',yyyy-mm-dd)),
    );
    
 BEGIN 
    v_value.did = 1;
    v_value.projects = v_project;
    INSERT INTO department v_value;
 END;
 /
 


